plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka'
}

android {
    namespace 'io.github.kitswas.virtualgamepadmobile'
    compileSdk 34

    defaultConfig {
        applicationId "io.github.kitswas.virtualgamepadmobile"
        // Defines the minimum API level required to run the app.
        minSdk 26
        // Specifies the API level used to test the app.
        targetSdk 34
        versionCode 1
        versionName "0.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
}

dependencies {
    implementation 'androidx.window:window:1.3.0'

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.2'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.preference:preference-ktx:1.2.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    def nav_version = '2.7.7'
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Google code scanner API for QR code scanning
    implementation 'com.google.android.gms:play-services-code-scanner:16.1.0'
    implementation 'com.google.android.gms:play-services-base:18.5.0'
    implementation 'com.google.android.gms:play-services-tflite-java:16.1.0'

    // Material3
    def material3_version = '1.2.1'
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"
}

task update_VGPDataExchangePackage(type: ProcessResources) {
    println 'Updating VGP_Data_Exchange package...'
    from(getRootDir().toPath().resolve('VGP_Data_Exchange/io/github/kitswas/VGP_Data_Exchange'))
    into(getRootDir().toPath().resolve('app/src/main/java/io/github/kitswas/VGP_Data_Exchange'))
}
tasks.matching {
    it != update_VGPDataExchangePackage
}.configureEach { Task task ->
    task.dependsOn update_VGPDataExchangePackage
}
